name: CI

on:
  push:
    paths-ignore:
      - '.appveyor.yml'
      - NEWS
      - 'xapian-maintainer-tools/**'
  pull_request:
    branches: master
    paths-ignore:
      - '.appveyor.yml'
      - NEWS
      - 'xapian-maintainer-tools/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  android-cross:
    runs-on: 'ubuntu-22.04'
    env:
      host_triplet: 'armv7a-linux-androideabi33'
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3
    - name: Install CCache
      uses: hendrikmuhs/ccache-action@v1
      with:
        key: android-cross
    - name: Install package dependencies
      run: |
        echo verbose=off > ~/.wgetrc
        sudo apt-get update
        sudo apt-get install \
            doxygen \
            graphviz \
            help2man \
            python3-docutils \
            pngcrush \
            python3-pygments
        #cd
        #wget -Ondk.zip https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
        #unzip -q ndk.zip
        #rm -f ndk.zip
        #mv android-ndk-* ndk
    - name: bootstrap source tree
      # Bootstrap only xapian-core
      run: |
        ./bootstrap xapian-core
        ./configure CC='ccache gcc' CXX='ccache g++' CXXFLAGS=-O0
        make -j2
        make -j2 distclean
    - name: configure
      run: |
        PATH=$PATH:$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin
        cd xapian-core
        ./configure --disable-documentation \
            --host=$host_triplet \
            CC=${host_triplet}-clang \
            CXX=${host_triplet}-clang++ \
            PKG_CONFIG=/bin/false
    - name: make
      run: |
        PATH=$PATH:$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin
        make -C xapian-core -j2
    - name: Run tests
      run: |
        PATH=$PATH:$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin
        cd xapian-core/tests
        make -j2 apitest internaltest stemtest unittest
        PATH=$PATH:$ANDROID_SDK_ROOT/platform-tools
        adb push apitest internaltest stemtest unittest testdata /data/local/tmp
        printf '%s\n' \
            'cd /data/local/tmp' \
            'sh runtest ./apitest' \
            'sh runtest ./internaltest' \
            'sh runtest ./stemtest' \
            'sh runtest ./unittest' | adb shell
    - name: Check generated files are in .gitignore
      # grep '^' passes through all input while giving a non-zero exit status
      # if that input is empty.
      run: git status --porcelain|grep '^' && { echo "The generated files listed above are not in .gitignore" ; exit 1; }; true
